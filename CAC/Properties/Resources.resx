<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="icon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\icon.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="NothingToRepeat" xml:space="preserve">
    <value>Nothing to repeat.</value>
  </data>
  <data name="NoValidFilesFound" xml:space="preserve">
    <value>No valid files were found.</value>
  </data>
  <data name="DirectoryDoesNotExist" xml:space="preserve">
    <value>The directory does not exist.</value>
  </data>
  <data name="MainForm_YouHaveToSelectDirectoryWithSourceCodes" xml:space="preserve">
    <value>You have to select a directory with source codes first.</value>
  </data>
  <data name="CannotCompile" xml:space="preserve">
    <value>Cannot compile the source code.</value>
  </data>
  <data name="MainForm_CannotOpenFile" xml:space="preserve">
    <value>The file was not opened.
List of files will be refreshed now.</value>
  </data>
  <data name="MainForm_CantUseRequestedGeneratedNumbers" xml:space="preserve">
    <value>Requested generated numbers no longer cannot be used.</value>
  </data>
  <data name="MainForm_NothingToExport" xml:space="preserve">
    <value>Nothing to export. You have to add some Input/Output to the protocol first.</value>
  </data>
  <data name="MainForm_InputsAndOutputsWillBeOverwriten" xml:space="preserve">
    <value>Existing inputs/outputs will be overwriten.</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="FileFilter_XML" xml:space="preserve">
    <value>XML files (*.xml)|*.xml</value>
  </data>
  <data name="MainForm_NoSourceCodesInSelectedDirectory" xml:space="preserve">
    <value>There are no source codes in the selected directory!</value>
  </data>
  <data name="MainForm_YouNeedToCreateTestProtocolFirst" xml:space="preserve">
    <value>You have to create test protocol first.</value>
  </data>
  <data name="Errors" xml:space="preserve">
    <value>Errors</value>
  </data>
  <data name="ExpectedOutput" xml:space="preserve">
    <value>Expected output</value>
  </data>
  <data name="Input" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="InputOutput" xml:space="preserve">
    <value>Input/Output</value>
  </data>
  <data name="MainForm_AllTestsWereFinnished" xml:space="preserve">
    <value>All tests were finished.</value>
  </data>
  <data name="MainForm_FileWasSuccessfulyTested" xml:space="preserve">
    <value>File {0} was tested successully!</value>
  </data>
  <data name="MainForm_NumberOfFiles" xml:space="preserve">
    <value>Number of files: {0}</value>
  </data>
  <data name="MainForm_StartingTests" xml:space="preserve">
    <value>Starting tests!</value>
  </data>
  <data name="MainForm_TestResultLine" xml:space="preserve">
    <value>Correct: {0} | Incorrect: {1} | Time: {2}| {3}</value>
  </data>
  <data name="NameOfFile" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="TestInProgress" xml:space="preserve">
    <value>test in progress</value>
  </data>
  <data name="FileFilter_TXT" xml:space="preserve">
    <value>text file (*.txt) | *.txt</value>
  </data>
  <data name="CouldNotLoadFile" xml:space="preserve">
    <value>An error occurred while loading file {0}.</value>
  </data>
  <data name="MainForm_CouldNotCreateTextFile" xml:space="preserve">
    <value>An error occurred while creating a file {0}.</value>
  </data>
  <data name="LanguageSelection_ChoseCFiles" xml:space="preserve">
    <value>Select directory that contains files with "*.c" extension.</value>
  </data>
  <data name="LanguageSelection_ChooseFolderSingleJava" xml:space="preserve">
    <value>Select directory that contains individual files with "*.java" extension (one file = one test)</value>
  </data>
  <data name="LanguageSelection_ChooseFolderJavaMultiFiles" xml:space="preserve">
    <value>Select directory that contains directories which contains "*.java" files (one directory = one test)</value>
  </data>
  <data name="FileDoesNotExist" xml:space="preserve">
    <value>File {0} does not exist.</value>
  </data>
  <data name="Test_AppDidNotEndedBeforeTimeout" xml:space="preserve">
    <value>The application was not terminated before timeout ({0}s)\n</value>
  </data>
  <data name="Test_CompilatorNotFound" xml:space="preserve">
    <value>Compilator was not found! \n {0}</value>
  </data>
  <data name="Test_JavaNotFound" xml:space="preserve">
    <value>Java was not found!\n{0}</value>
  </data>
  <data name="Test_RequiedCommandWasNotFound" xml:space="preserve">
    <value>Required command was not found: {0}</value>
  </data>
  <data name="TestManager_UnsuportedTypeOfSourceCode" xml:space="preserve">
    <value>Unsupported type of source file!</value>
  </data>
  <data name="TestResult_CannotConvertNumber" xml:space="preserve">
    <value>"{0}" could not be converted to number.</value>
  </data>
  <data name="XmlManager_UnsuportedXmlFile" xml:space="preserve">
    <value>Selected XML file is not supported.</value>
  </data>
  <data name="XmlManager_InvalidDataImportFail" xml:space="preserve">
    <value>{0} is not supported and was not imported.</value>
  </data>
  <data name="XmlManager_ImportFailed" xml:space="preserve">
    <value>An error occured during import.</value>
  </data>
  <data name="IOFDescription_CompareFiles" xml:space="preserve">
    <value>ACTION: comparison of file {0} and generated file</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="YouHaveToSelectFile" xml:space="preserve">
    <value>You have to select some file!</value>
  </data>
  <data name="IOFDescription_LoadOutputsFromFile" xml:space="preserve">
    <value>ACTION: Load outputs from file</value>
  </data>
  <data name="ActionRepeatLast_NothingToRepeat" xml:space="preserve">
    <value>Nothing to repeat.</value>
  </data>
  <data name="ActionRepeatLast_LastActionCouldNotBeRepeated" xml:space="preserve">
    <value>Last action could not be repeated.</value>
  </data>
  <data name="IOFDescription_InputNumber" xml:space="preserve">
    <value>INPUT: number {0}</value>
  </data>
  <data name="IOFDescription_RepeatLast" xml:space="preserve">
    <value>ACTION: repeat last step {0}x</value>
  </data>
  <data name="InputRandomNumber_MaxCantBeGreatherThanMin" xml:space="preserve">
    <value>MAX can't be greater than Min</value>
  </data>
  <data name="InputRandomNumber_MinCantBeGreatherThanMax" xml:space="preserve">
    <value>MIN can't be greater than Max</value>
  </data>
  <data name="IOFDescription_InputRandomDecimalNumber" xml:space="preserve">
    <value>INPUT: random decimal number from {0} to {1}</value>
  </data>
  <data name="IOFDescription_InputRandomNumber" xml:space="preserve">
    <value>INPUT: random number from {0} to {1}</value>
  </data>
  <data name="IOFDescription_InputString" xml:space="preserve">
    <value>INPUT: text: \"{0}\"</value>
  </data>
  <data name="IOFDescription_InputTextFile" xml:space="preserve">
    <value>INPUT: file {0}</value>
  </data>
  <data name="IOFDesruption_CountOfNumMatchingMultipleConditions" xml:space="preserve">
    <value>OUTPUT: count of number matching {0} conditions</value>
  </data>
  <data name="IOFDesruption_CountOfNumMatchingSingleCondition" xml:space="preserve">
    <value>OUTPUT: count of number matching 1 condition</value>
  </data>
  <data name="OutputCountOfNumbersMatchingConditions_ThisConditionAllreadyExists" xml:space="preserve">
    <value>This condition already exists.</value>
  </data>
  <data name="OutputCountOfNumbersMatchingConditions_InvalidCondition" xml:space="preserve">
    <value>The condition is not valid.</value>
  </data>
  <data name="OutputCountOfNumbersMatchingConditions_YouHaveToSelectConditionForDeletion" xml:space="preserve">
    <value>You have to select condition for deletion first.</value>
  </data>
  <data name="OutputCountOfNumbersMatchingConditions_RequestedNumberOfNumbersIsNotPOssible" xml:space="preserve">
    <value>The requested count of numbers is not possible.</value>
  </data>
  <data name="IOFDescription_OutputNumber" xml:space="preserve">
    <value>OUTPUT: Number {0}</value>
  </data>
  <data name="OutputNumberBasedOnRandomInput_InvalidFormatOfMath" xml:space="preserve">
    <value>Math has an incorrect format!
If you still wish to continue then the object will be deleted.</value>
  </data>
  <data name="OutputNumberBasedOnRandomInput_YouHaveToEnterValidMath" xml:space="preserve">
    <value>You have to enter valid math.</value>
  </data>
  <data name="IOFDescription_NumberBasedOnGeneratedInput" xml:space="preserve">
    <value>OUTPUT: Number based on generated values.</value>
  </data>
  <data name="IOFDescription_NumberSatisfyingMultipleConditions" xml:space="preserve">
    <value>OUTPUT: Number satisfying {0} conditions.</value>
  </data>
  <data name="IOFDescription_NumberSatisfyingSingleCondition" xml:space="preserve">
    <value>OUTPUT: Number satisfying 1 condition.</value>
  </data>
  <data name="OutputNumberMatchingConditions_ThisConditionAllreadyExists" xml:space="preserve">
    <value>This condition already exists.</value>
  </data>
  <data name="IOFDescription_OutputString" xml:space="preserve">
    <value>OUTPUT: text: \"{0}\"</value>
  </data>
  <data name="SettingsDeviation_DeviationIsAllreadySet" xml:space="preserve">
    <value>Deviation is already set!</value>
  </data>
  <data name="IOFDescription_ProhibitedCommand" xml:space="preserve">
    <value>SETTINGS: Prohibited command  \"{0}\"</value>
  </data>
  <data name="IOFDescription_RequiedCommand" xml:space="preserve">
    <value>SETTINGS: Requied command  \"{0}\"</value>
  </data>
  <data name="IOFDescription_SettingsDeviation" xml:space="preserve">
    <value>SETTINGS: Maximal deviation {0}</value>
  </data>
  <data name="SettingsStartupArguments_StartupArgumentsAreAllreadySet" xml:space="preserve">
    <value>Startup arguments are already set.</value>
  </data>
  <data name="IOFDescription_StartupArguments" xml:space="preserve">
    <value>SETTINGS: Startup arguments:  \"{0}\"</value>
  </data>
  <data name="SettingsTimeout_TimeoutAllreadySet" xml:space="preserve">
    <value>Timeout is already set!</value>
  </data>
  <data name="ActionCompareFiles" xml:space="preserve">
    <value>ACTION: Compare files</value>
  </data>
  <data name="ActionLoadOutputsFromTextFile" xml:space="preserve">
    <value>ACTION: Load outputs from file</value>
  </data>
  <data name="ActionRepeatLast" xml:space="preserve">
    <value>ACTION: Repeat last action</value>
  </data>
  <data name="InputNumber" xml:space="preserve">
    <value>INPUT: Number</value>
  </data>
  <data name="InputRandomNumber" xml:space="preserve">
    <value>INPUT: Random number</value>
  </data>
  <data name="InputString" xml:space="preserve">
    <value>INPUT: Text</value>
  </data>
  <data name="InputTextFile" xml:space="preserve">
    <value>INPUT: Text file</value>
  </data>
  <data name="IOFDescription_SettingsTimeout" xml:space="preserve">
    <value>SETTINGS: Program timeout: {0}</value>
  </data>
  <data name="OutputCountOfNumbersMatchingConditions" xml:space="preserve">
    <value>OUTPUT: Count of numbers matching conditions</value>
  </data>
  <data name="OutputNumber" xml:space="preserve">
    <value>OUTPUT: Number</value>
  </data>
  <data name="OutputNumberBasedOnRandomInput" xml:space="preserve">
    <value>OUTPUT: Number based on generated number</value>
  </data>
  <data name="OutputNumberMatchingConditions" xml:space="preserve">
    <value>OUTPUT: Number matching conditions</value>
  </data>
  <data name="OutputString" xml:space="preserve">
    <value>OUTPUT: Text</value>
  </data>
  <data name="SettingsDeviation" xml:space="preserve">
    <value>SETTINGS: Deviation</value>
  </data>
  <data name="SettingsProhibitedCommand" xml:space="preserve">
    <value>SETTINGS: Prohibited command</value>
  </data>
  <data name="SettingsRequiedCommand" xml:space="preserve">
    <value>SETTINGS: Required command</value>
  </data>
  <data name="SettingsStartupArguments" xml:space="preserve">
    <value>SETTINGS: Startup arguments</value>
  </data>
  <data name="SettingsTimeout" xml:space="preserve">
    <value>SETTINGS: Program timeout</value>
  </data>
  <data name="Test_ProhibitedCommandFound" xml:space="preserve">
    <value>Prohibited command found: {0}</value>
  </data>
  <data name="Validator_UnknownVariable" xml:space="preserve">
    <value>Math contains the unknown variable.</value>
  </data>
  <data name="SourceCodeJava_MultipleFilesWithMainFound" xml:space="preserve">
    <value>Multiple files with main method found!</value>
  </data>
  <data name="SourceCodeJava_NoFileWithMainFound" xml:space="preserve">
    <value>No file with main method found!</value>
  </data>
  <data name="YouDontHavePermisionsToReadFile" xml:space="preserve">
    <value>You don't have permission to read {0}!</value>
  </data>
  <data name="SourceCodes_UnsuportedFileExtension" xml:space="preserve">
    <value>Unsupported type of file.</value>
  </data>
  <data name="SourceCodes_JavaSingleMultiMismatch" xml:space="preserve">
    <value>Directory contains programs made from single java file and programs with multiple java files  simultaneously.
You have to choose only one of those.</value>
  </data>
  <data name="XmlManager_ExportFailed" xml:space="preserve">
    <value>Export failed!</value>
  </data>
  <data name="XmlManager_ExportWasSuccesful" xml:space="preserve">
    <value>Export was succesful.</value>
  </data>
  <data name="Test_CompilatorNotFoundWannaDownload" xml:space="preserve">
    <value>Compile (TCC) was not found.
Do you want to download it?</value>
  </data>
  <data name="TestC_DownloadFailed" xml:space="preserve">
    <value>Download failed!</value>
  </data>
  <data name="TestsCannotBeRunWithoutCompiler" xml:space="preserve">
    <value>Tests cannot be run without compiler!</value>
  </data>
  <data name="JdknotFound" xml:space="preserve">
    <value>Java Development Kit not found!</value>
  </data>
  <data name="InvalidPath" xml:space="preserve">
    <value>Invalid path!</value>
  </data>
  <data name="ActionStartExternalApp_Tip" xml:space="preserve">
    <value>Run before test:
@name will be replaced by tested file name.

Run after test:
@name will be replaced by tested file name.
@correct will be replaced by count of right outputs.
@wrong will be replaced by count of wrong outputs.
@time will be replaced by processor time.</value>
  </data>
  <data name="ActionStartExternalApp_invalidArguments" xml:space="preserve">
    <value>When external application is run before test,
than the arguments can't contain "After test run" placeholders (@correct,...)</value>
  </data>
  <data name="ActionStartExternalApp" xml:space="preserve">
    <value>ACTION: Run external application</value>
  </data>
  <data name="IOFDescription_RunExternalApplication" xml:space="preserve">
    <value>ACTION: Run external application</value>
  </data>
</root>